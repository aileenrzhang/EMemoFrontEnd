[{"C:\\Users\\ailee\\Documents\\GitHub\\EMemo-FrontEnd\\my-app\\src\\index.js":"1","C:\\Users\\ailee\\Documents\\GitHub\\EMemo-FrontEnd\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\ailee\\Documents\\GitHub\\EMemo-FrontEnd\\my-app\\src\\App.js":"3","C:\\Users\\ailee\\Documents\\GitHub\\EMemo-FrontEnd\\my-app\\src\\organizationPosts.js":"4","C:\\Users\\ailee\\Documents\\GitHub\\EMemo-FrontEnd\\my-app\\src\\Forum.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":2432,"mtime":1607306010829,"results":"9","hashOfConfig":"7"},{"size":417,"mtime":1607302527261,"results":"10","hashOfConfig":"7"},{"size":4295,"mtime":1607304172148,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"64nf98",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\ailee\\Documents\\GitHub\\EMemo-FrontEnd\\my-app\\src\\index.js",[],["24","25"],"C:\\Users\\ailee\\Documents\\GitHub\\EMemo-FrontEnd\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\ailee\\Documents\\GitHub\\EMemo-FrontEnd\\my-app\\src\\App.js",["26","27","28","29","30"],"C:\\Users\\ailee\\Documents\\GitHub\\EMemo-FrontEnd\\my-app\\src\\organizationPosts.js",[],"C:\\Users\\ailee\\Documents\\GitHub\\EMemo-FrontEnd\\my-app\\src\\Forum.jsx",["31"],"import React, { Component } from 'react';\r\nimport organizationPosts from './organizationPosts';\r\nimport './Forum.css';\r\n\r\nclass Forum extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            creating: false,\r\n            posts: [],\r\n            title: \"\",\r\n            content: \"\"\r\n        }\r\n\r\n        this.createPost = this.createPost.bind(this);\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n    }\r\n\r\n    delete = e => {\r\n        e.preventDefault();\r\n        organizationPosts.delete(\"402881d0763a18a901763a19c70e0000\", e.target.id).then(res => {\r\n            organizationPosts.getPosts(\"402881d0763a18a901763a19c70e0000\").then(res => {\r\n                this.setState({ posts: res.data })\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    submit = e => {\r\n        e.preventDefault();\r\n\r\n        let post = {\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            userID: \"402881d0763a1c0601763a1c82bd0000\"\r\n        }\r\n\r\n        let newPosts = this.state.posts;\r\n        newPosts.push(post);\r\n\r\n        this.setState({ posts: newPosts })\r\n\r\n        organizationPosts.post(\"402881d0763a18a901763a19c70e0000\", post).then(res => {\r\n            organizationPosts.getPosts(\"402881d0763a18a901763a19c70e0000\").then(res => {\r\n                this.setState({ posts: res.data })\r\n            })\r\n        });\r\n    }\r\n\r\n    changeHandler = e => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    createPost() {\r\n        this.setState({ creating: !this.state.creating })\r\n    }\r\n\r\n    componentDidMount() {\r\n        organizationPosts.getPosts(\"402881d0763a18a901763a19c70e0000\").then(res => {\r\n            this.setState({ posts: res.data })\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"CreatePost\" onClick={this.createPost}>Create Post</button>\r\n                {(this.state.creating == true) &&\r\n                    <form className=\"textform\">\r\n                        <div className=\"postButtonTitle\">\r\n                            <label>Title: </label>\r\n                            <input placeholder=\"Title\" name=\"title\" value={this.state.title} onChange={this.changeHandler} required />\r\n                        </div>\r\n\r\n                        <div className=\"contentButtonTitle\">\r\n                            <label>Content: </label>\r\n                            <div class=\"contentInput\">\r\n                                <input class=\"contentInputBox\" placeholder=\"Content\" name=\"content\" value={this.state.content} onChange={this.changeHandler} required />\r\n                            </div>\r\n                        </div>\r\n                        <button onClick={this.submit}>Post</button>\r\n                    </form>\r\n                }\r\n                {\r\n                    this.state.posts.map(post =>\r\n                        <div class=\"Comment\">\r\n                            <div class=\"comment-grid\">\r\n                                <div class=\"comment-left\">\r\n                                    <div class=\"UserInfo\">\r\n                                        <img class=\"Avatar\"\r\n                                            src={this.props.avatarUrl}\r\n                                            alt={this.props.name}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"comment-right\">\r\n                                    <div class=\"UserInfo-name\">\r\n                                        <p>{post.title}</p>\r\n                                    </div>\r\n                                    <div class=\"Comment-text\">\r\n                                        {post.content}\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <button class=\"deleteButton\" id={post.id} onClick={this.delete}>Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Forum;",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":14},{"ruleId":"36","severity":1,"message":"40","line":3,"column":8,"nodeType":"38","messageId":"39","endLine":3,"endColumn":15},{"ruleId":"36","severity":1,"message":"41","line":4,"column":8,"nodeType":"38","messageId":"39","endLine":4,"endColumn":18},{"ruleId":"36","severity":1,"message":"42","line":5,"column":8,"nodeType":"38","messageId":"39","endLine":5,"endColumn":25},{"ruleId":"36","severity":1,"message":"43","line":16,"column":10,"nodeType":"38","messageId":"39","endLine":16,"endColumn":14},{"ruleId":"44","severity":1,"message":"45","line":71,"column":39,"nodeType":"46","messageId":"47","endLine":71,"endColumn":41},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar","'Toolbar' is defined but never used.","'TypoGraphy' is defined but never used.","'organizationPosts' is defined but never used.","'Post' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]